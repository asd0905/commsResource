{"version":3,"file":"cool-library-0.2.3.umd.min.js","sources":["../../src/libs/date-helper.ts","../../src/libs/constants.ts","../../src/libs/env-helper.ts","../../src/libs/storage-helper.ts","../../src/libs/url-helper.ts","../../src/libs/login.ts","../../src/libs/file-helper.ts","../../src/libs/factory.ts","../../src/libs/search-helper.ts","../../src/libs/vue-helper.ts"],"sourcesContent":["import moment from 'moment'\r\n\r\n/**\r\n * DateHelper\r\n *\r\n * moment 라이브러리에 의존함\r\n */\r\nexport class DateHelper {\r\n    /**\r\n     * date 를 하루의 끝시간으로 설정\r\n     * @param {string} dateStr\r\n     * @returns {string}\r\n     */\r\n    setEndDateToISOString(dateStr: string) {\r\n        const date = moment(dateStr);\r\n        const h = 23;\r\n        const m = 59;\r\n        const s = 59;\r\n        date.hour(h);\r\n        date.minute(m);\r\n        date.second(s);\r\n\r\n        return date.toISOString();\r\n    }\r\n}\r\n","export const MEMBER_URL = 'https://member.coolschool.co.kr';\r\nexport const DEV_MEMBER_URL = 'https://dev-member.coolschool.co.kr';\r\nexport const LOCAL_MEMBER_URL = 'https://local-member.coolschool.co.kr';\r\nexport const COOLSCHOOL_URL = 'https://www.coolschool.co.kr';\r\nexport const DEV_COOLSCHOOL_URL = 'https://dev.coolschool.co.kr';\r\nexport const LOCAL_COOLSCHOOL_URL = 'https://local.coolschool.co.kr';\r\nexport const COOL_LOGIN_URL = MEMBER_URL + '/login';\r\nexport const DEV_COOL_LOGIN_URL = DEV_MEMBER_URL + '/login';\r\nexport const LOCAL_COOL_LOGIN_URL = LOCAL_MEMBER_URL + '/login';\r\nexport const COOL_LOGIN_CALLBACK_URL =\r\n    window.location.protocol + '//' + window.location.host + '/callback';\r\nexport const COOL_LOGIN_CALLBACK_FOR_SAMSTORY_URL =\r\n    window.location.protocol + '//' + window.location.host + '/login';\r\nexport const COOL_LOGIN_CALLBACK_FOR_EMOTICON_URL =\r\n  window.location.protocol + '//' + window.location.host + '/login';\r\nexport const COOL_LOGIN_CHECK_URL = `${MEMBER_URL}/loginCheck`;\r\nexport const DEV_COOL_LOGIN_CHECK_URL = `${DEV_MEMBER_URL}/loginCheck`;\r\nexport const LOCAL_COOL_LOGIN_CHECK_URL = `${LOCAL_MEMBER_URL}/loginCheck`;\r\nexport const COOL_LOGOUT_URL = `${MEMBER_URL}/logout`;\r\nexport const COOLSCHOOL_CALLBACK_URL = 'https://www.coolschool.co.kr/callback';\r\nexport const DEV_COOLSCHOOL_CALLBACK_URL = 'https://dev.coolschool.co.kr/callback';\r\nexport const LOCAL_COOLSCHOOL_CALLBACK_URL = 'https://local.coolschool.co.kr/callback';\r\nexport const SEARCH_URL = '//search.coolschool.co.kr';\r\nexport const DEV_SEARCH_URL = '//dev-search.coolschool.co.kr';\r\nexport const LOCAL_SEARCH_URL = '//local-search.coolschool.co.kr';\r\n\r\nexport const enum Env {\r\n    LOCAL = 'local', DEV = 'dev', PROD = 'prod'\r\n}\r\n\r\nexport const enum ServerName {\r\n    COOLSCHOOL = 'coolschool',\r\n    MEMBER = 'member',\r\n    SEARCH = 'search'\r\n}\r\n\r\nexport const FN_LOGOUT_URL = (url: string): string => {\r\n    return `${url}/logout?client_id=:client_id`\r\n};\r\n\r\nexport const FN_LOGOUT_PROC_URL = (url: string): string => {\r\n    return `${url}/logoutProc`\r\n};\r\n\r\nexport interface LogoutOpts {\r\n    isRestoreLocation: boolean;\r\n    isLogoutProc: boolean;\r\n    logoutProcUrl: string | undefined;\r\n}\r\n","import {\r\n    COOLSCHOOL_URL,\r\n    DEV_COOLSCHOOL_URL,\r\n    DEV_MEMBER_URL,\r\n    DEV_SEARCH_URL,\r\n    Env, LOCAL_COOLSCHOOL_URL,\r\n    LOCAL_MEMBER_URL,\r\n    LOCAL_SEARCH_URL,\r\n    MEMBER_URL,\r\n    SEARCH_URL,\r\n    ServerName\r\n} from \"./constants\";\r\n\r\nexport class EnvHelper {\r\n\r\n    getUrl(env: Env, serverName: ServerName, fnUrl?: (url: string) => string): string {\r\n        let url = '';\r\n        switch (env) {\r\n            case Env.PROD:\r\n                switch (serverName) {\r\n                    case ServerName.MEMBER:\r\n                        url = MEMBER_URL;\r\n                        break;\r\n                    case ServerName.SEARCH:\r\n                        url = SEARCH_URL;\r\n                        break;\r\n                    case ServerName.COOLSCHOOL:\r\n                        url = COOLSCHOOL_URL;\r\n                        break;\r\n                }\r\n                break;\r\n            case Env.DEV:\r\n                switch (serverName) {\r\n                    case ServerName.MEMBER:\r\n                        url = DEV_MEMBER_URL;\r\n                        break;\r\n                    case ServerName.SEARCH:\r\n                        url = DEV_SEARCH_URL;\r\n                        break;\r\n                    case ServerName.COOLSCHOOL:\r\n                        url = DEV_COOLSCHOOL_URL;\r\n                        break;\r\n                }\r\n                break;\r\n            case Env.LOCAL:\r\n                switch (serverName) {\r\n                    case ServerName.MEMBER:\r\n                        url = LOCAL_MEMBER_URL;\r\n                        break;\r\n                    case ServerName.SEARCH:\r\n                        url = LOCAL_SEARCH_URL;\r\n                        break;\r\n                    case ServerName.COOLSCHOOL:\r\n                        url = LOCAL_COOLSCHOOL_URL;\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n        if(fnUrl) {\r\n            return fnUrl(url);\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n}\r\n","export class StorageHelper {\r\n\r\n    /**\r\n     * 쿠키 저장\r\n     * @param cname\r\n     * @param cvalue\r\n     * @param exdays\r\n     */\r\n    setCookie(cname: string, cvalue: string, exdays: number) {\r\n        const d = new Date();\r\n        // tslint:disable-next-line\r\n        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n        const expires = 'expires=' + d.toUTCString();\r\n        document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';\r\n    }\r\n\r\n    /**\r\n     * 쿠키 저장 시간 기준\r\n     * @param cname\r\n     * @param cvalue\r\n     * @param hour\r\n     */\r\n    setCookieHour(cname: string, cvalue: string, hour: number) {\r\n        const d = new Date();\r\n        // tslint:disable-next-line\r\n        d.setTime(d.getTime() + (hour * 60 * 60 * 1000));\r\n        const expires = 'expires=' + d.toUTCString();\r\n        document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';\r\n    }\r\n\r\n    /**\r\n     * 쿠키가져온기\r\n     * @param cname\r\n     */\r\n    getCookie(cname: string) {\r\n        const name = cname + '=';\r\n        const decodedCookie = decodeURIComponent(document.cookie);\r\n        const ca = decodedCookie.split(';');\r\n        // tslint:disable-next-line\r\n        for (let i = 0; i < ca.length; i++) {\r\n            let c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * 세션 스토리지에 값 저장\r\n     * @param sname  세션 스토리지에 저장할 이름\r\n     * @param svalue 세션 스토리지에 저장할 값\r\n     */\r\n    setSessionStorage(sname: string, svalue: string){\r\n        sessionStorage.setItem(sname, svalue);\r\n    }\r\n\r\n    /**\r\n     * 세션 스토리지에서 값을 가져온다.\r\n     * @param sname\r\n     * @return string  이름에 해당하는 값을 반환\r\n     */\r\n    getSessionStorage(sname: string): any {\r\n        return sessionStorage.getItem(sname);\r\n    }\r\n\r\n}\r\n","export class UrlHelper {\r\n    /**\r\n     * location 의 param 을 가져온다\r\n     * @param {string} key\r\n     * @returns {string} value\r\n     */\r\n    getQueryParam(key: string) {\r\n        return this.getQueryParams()[key] || '';\r\n    }\r\n\r\n    /**\r\n     * location params 정보를 가져온다\r\n     * @param {string} queryString\r\n     * @returns {any} params\r\n     */\r\n    private getQueryParams(queryString = '') {\r\n        let qs = queryString;\r\n        qs = qs || document.location.href.split('?')[1] || document.location.search;\r\n        qs = qs.split('+').join(' ');\r\n\r\n        const params: any = {};\r\n        let tokens;\r\n        const re = /[?&]?([^=]+)=([^&]*)/g;\r\n        const sec = 2;\r\n\r\n        // noinspection TsLint\r\n        // tslint:disable-next-line\r\n        while ((tokens = re.exec(qs))) {\r\n            params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[sec]);\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * 하나의 hash 를 가져온다\r\n     * @param url\r\n     */\r\n    getHashSingleValue(url: string) {\r\n        const hash = url.indexOf('#');\r\n        if (hash === -1) {\r\n            return '';\r\n        }\r\n\r\n        return url.substring(hash);\r\n    }\r\n}\r\n","import * as $ from 'jquery'\r\nimport {\r\n    COOL_LOGIN_CALLBACK_FOR_EMOTICON_URL,\r\n    COOL_LOGIN_CALLBACK_FOR_SAMSTORY_URL,\r\n    COOL_LOGIN_CALLBACK_URL,\r\n    COOL_LOGIN_CHECK_URL,\r\n    COOL_LOGIN_URL,\r\n    COOLSCHOOL_CALLBACK_URL,\r\n    DEV_COOL_LOGIN_CHECK_URL,\r\n    DEV_COOL_LOGIN_URL,\r\n    DEV_COOLSCHOOL_CALLBACK_URL,\r\n    Env,\r\n    FN_LOGOUT_PROC_URL,\r\n    FN_LOGOUT_URL,\r\n    LOCAL_COOL_LOGIN_CHECK_URL,\r\n    LOCAL_COOL_LOGIN_URL,\r\n    LOCAL_COOLSCHOOL_CALLBACK_URL,\r\n    LogoutOpts,\r\n    ServerName,\r\n} from './constants'\r\nimport {EnvHelper} from \"./env-helper\";\r\nimport {StorageHelper} from \"./storage-helper\";\r\nimport {UrlHelper} from './url-helper'\r\n\r\nexport class Login {\r\n    private urlHelper: UrlHelper = new UrlHelper();\r\n    private storageHelper: StorageHelper = new StorageHelper();\r\n    private envHelper: EnvHelper = new EnvHelper();\r\n\r\n    /**\r\n     * 쿨스쿨 로그인 페이지로 이동\r\n     * @param {string} clientId\r\n     * @param {string} action (선택)\r\n     * @param isDev 개발 URL 사용여부\r\n     */\r\n    goDefaultCoolLogin(clientId = '', action = '', isDev: boolean | 'prod' | 'dev' | 'local' = false) {\r\n        const param = {\r\n            client_id: clientId,\r\n            redirect_uri: COOL_LOGIN_CALLBACK_URL,\r\n            redirect_uri_next: window.location.href,\r\n            do_action: action,\r\n        };\r\n        let loginURL = COOL_LOGIN_URL;\r\n        if (typeof isDev === 'boolean') {\r\n            if (isDev) {\r\n                loginURL = DEV_COOL_LOGIN_URL;\r\n            }\r\n        } else {\r\n            switch (isDev) {\r\n                case 'prod': {\r\n                    loginURL = COOL_LOGIN_URL;\r\n                    break;\r\n                }\r\n                case 'dev': {\r\n                    loginURL = DEV_COOL_LOGIN_URL;\r\n                    break;\r\n                }\r\n                case 'local': {\r\n                    loginURL = LOCAL_COOL_LOGIN_URL;\r\n                    break;\r\n                }\r\n                default: {\r\n                    loginURL = COOL_LOGIN_URL;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let paramStr = $.param(param);\r\n        if (param.redirect_uri_next.search('&') === -1 && action !== '') {\r\n            paramStr = paramStr.replace('&do_action=', '?do_action=');\r\n        }\r\n        window.location.href = `${loginURL}?${paramStr}`;\r\n    }\r\n\r\n    /**\r\n     * 샘스토리용 로그인 페이지로 이동\r\n     * @param clientId\r\n     * @param action\r\n     * @param isDev\r\n     */\r\n    goCoolLoginForSamstory(clientId = '', action = '', isDev = false) {\r\n        const param = {\r\n            client_id: clientId,\r\n            redirect_uri: COOL_LOGIN_CALLBACK_FOR_SAMSTORY_URL,\r\n            redirect_uri_next: window.location.href,\r\n            do_action: action,\r\n        };\r\n        let loginURL = COOL_LOGIN_URL;\r\n        if (isDev) {\r\n            loginURL = DEV_COOL_LOGIN_URL;\r\n        }\r\n        let paramStr = $.param(param);\r\n        if (param.redirect_uri_next.search('&') === -1 && action !== '') {\r\n            paramStr = paramStr.replace('&do_action=', '?do_action=');\r\n        }\r\n        window.location.href = `${loginURL}?${paramStr}`;\r\n    }\r\n\r\n    /**\r\n     * 샘스토리용 next url 지정하여 로그인 페이지 이동\r\n     * @param clientId\r\n     * @param action\r\n     * @param nextUrl\r\n     * @param isDev\r\n     */\r\n    goCoolLoginNextUrlForSamstory(clientId = '', action = '', nextUrl: string, isDev = false) {\r\n        const param = {\r\n            client_id: clientId,\r\n            redirect_uri: COOL_LOGIN_CALLBACK_FOR_SAMSTORY_URL,\r\n            redirect_uri_next: nextUrl,\r\n            do_action: action,\r\n        };\r\n        let loginURL = COOL_LOGIN_URL;\r\n        if (isDev) {\r\n            loginURL = DEV_COOL_LOGIN_URL;\r\n        }\r\n        let paramStr = $.param(param);\r\n        if (param.redirect_uri_next.search('&') === -1 && action !== '') {\r\n            paramStr = paramStr.replace('&do_action=', '?do_action=');\r\n        }\r\n        window.location.href = `${loginURL}?${paramStr}`;\r\n    }\r\n\r\n    /**\r\n     * 이모티콘용 로그인 페이지로 이동\r\n     * @param clientId\r\n     * @param action\r\n     * @param isDev\r\n     */\r\n    goCoolLoginForEmoticon(clientId = '', action = '', isDev = false) {\r\n        const param = {\r\n            client_id: clientId,\r\n            redirect_uri: COOL_LOGIN_CALLBACK_FOR_EMOTICON_URL,\r\n            redirect_uri_next: window.location.href,\r\n            do_action: action,\r\n        };\r\n        let loginURL = COOL_LOGIN_URL;\r\n        if (isDev) {\r\n            loginURL = DEV_COOL_LOGIN_URL;\r\n        }\r\n        let paramStr = $.param(param);\r\n        if (param.redirect_uri_next.search('&') === -1 && action !== '') {\r\n            paramStr = paramStr.replace('&do_action=', '?do_action=');\r\n        }\r\n        window.location.href = `${loginURL}?${paramStr}`;\r\n    }\r\n\r\n    /**\r\n     * 이모티콘용 next url 지정하여 로그인 페이지 이동\r\n     * @param clientId\r\n     * @param action\r\n     * @param nextUrl\r\n     * @param isDev\r\n     */\r\n    goCoolLoginNextUrlForEmoticon(clientId = '', action = '', nextUrl: string, isDev = false) {\r\n        const param = {\r\n            client_id: clientId,\r\n            redirect_uri: COOL_LOGIN_CALLBACK_FOR_EMOTICON_URL,\r\n            redirect_uri_next: nextUrl,\r\n            do_action: action,\r\n        };\r\n        let loginURL = COOL_LOGIN_URL;\r\n        if (isDev) {\r\n            loginURL = DEV_COOL_LOGIN_URL;\r\n        }\r\n        let paramStr = $.param(param);\r\n        if (param.redirect_uri_next.search('&') === -1 && action !== '') {\r\n            paramStr = paramStr.replace('&do_action=', '?do_action=');\r\n        }\r\n        window.location.href = `${loginURL}?${paramStr}`;\r\n    }\r\n\r\n    /**\r\n     * 프로필용 로그인 페이지로 이동\r\n     * @param clientId\r\n     * @param action\r\n     * @param isDev\r\n     */\r\n    goCoolLoginForProfile(clientId = '', action = '', isDev: boolean | 'prod' | 'dev' | 'local' = false) {\r\n        let loginURL = COOL_LOGIN_URL;\r\n        let callbackURL = COOLSCHOOL_CALLBACK_URL;\r\n        if (typeof isDev === 'boolean') {\r\n            if (isDev) {\r\n                loginURL = DEV_COOL_LOGIN_URL;\r\n                callbackURL = DEV_COOLSCHOOL_CALLBACK_URL;\r\n            }\r\n        } else {\r\n            switch (isDev) {\r\n                case 'prod': {\r\n                    loginURL = COOL_LOGIN_URL;\r\n                    callbackURL = COOLSCHOOL_CALLBACK_URL;\r\n                    break;\r\n                }\r\n                case 'dev': {\r\n                    loginURL = DEV_COOL_LOGIN_URL;\r\n                    callbackURL = DEV_COOLSCHOOL_CALLBACK_URL;\r\n                    break;\r\n                }\r\n                case 'local': {\r\n                    loginURL = LOCAL_COOL_LOGIN_URL;\r\n                    callbackURL = LOCAL_COOLSCHOOL_CALLBACK_URL;\r\n                    break;\r\n                }\r\n                default: {\r\n                    loginURL = COOL_LOGIN_URL;\r\n                    callbackURL = COOLSCHOOL_CALLBACK_URL;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const param = {\r\n            client_id: clientId,\r\n            redirect_uri: callbackURL,\r\n            redirect_uri_next: window.location.href,\r\n            do_action: action,\r\n        };\r\n\r\n        const paramStr = $.param(param);\r\n        window.location.href = `${loginURL}?${paramStr}`;\r\n    }\r\n\r\n    /**\r\n     * 쿨스쿨 로그인 이후 redirect 처리\r\n     */\r\n    coolLoginCallbackRedirect() {\r\n        let redirectNext = this.urlHelper.getQueryParam('redirect_uri_next');\r\n        const redirect = this.urlHelper.getQueryParam('redirect');\r\n        if (redirect) {\r\n            redirectNext = redirect;\r\n        }\r\n        const doAction = this.urlHelper.getQueryParam('do_action');\r\n        if (redirectNext) {\r\n            if (doAction) {\r\n                if (redirectNext.indexOf('?') !== -1) {\r\n                    location.href = redirectNext + '&do_action=' + doAction;\r\n                } else {\r\n                    location.href = redirectNext + '?do_action=' + doAction;\r\n                }\r\n            } else {\r\n                location.href = redirectNext;\r\n            }\r\n        } else {\r\n            location.href = '/';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 통합 계정 로그인 세션이 있는지 검사\r\n     */\r\n    coolLoginCheck(isDev: boolean | 'prod' | 'dev' | 'local' = false): any {\r\n\r\n        let loginCheckURL = COOL_LOGIN_CHECK_URL;\r\n        if (typeof isDev === 'boolean') {\r\n            if (isDev) {\r\n                loginCheckURL = DEV_COOL_LOGIN_CHECK_URL;\r\n            }\r\n        } else {\r\n            switch (isDev) {\r\n                case 'prod': {\r\n                    loginCheckURL = COOL_LOGIN_CHECK_URL;\r\n                    break;\r\n                }\r\n                case 'dev': {\r\n                    loginCheckURL = DEV_COOL_LOGIN_CHECK_URL;\r\n                    break;\r\n                }\r\n                case 'local': {\r\n                    loginCheckURL = LOCAL_COOL_LOGIN_CHECK_URL;\r\n                    break;\r\n                }\r\n                default: {\r\n                    loginCheckURL = COOL_LOGIN_CHECK_URL;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return $.ajax({\r\n            method: 'GET',\r\n            dataType: 'jsonp',\r\n            url: loginCheckURL\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 통합 계정 로그인 세션이 있는지 검사\r\n     */\r\n    cooLoginCheck(isDev: boolean | 'prod' | 'dev' | 'local' = false): any {\r\n        return this.coolLoginCheck(isDev);\r\n    }\r\n\r\n\r\n    /**\r\n     * 로그아웃 함수\r\n     * @param clientId\r\n     * @param env\r\n     * @param logoutOpts\r\n     */\r\n    async logout(clientId: string, env: Env, logoutOpts?: LogoutOpts | any) {\r\n\r\n        const logoutUrl = this.envHelper.getUrl(env, ServerName.MEMBER, FN_LOGOUT_URL);\r\n        const setting = {\r\n            url: logoutUrl.replace(':client_id', clientId),\r\n            type: 'GET',\r\n            contentType: \"application/json\",\r\n            dataType: \"jsonp\",\r\n        };\r\n        const settingResponse = await $.ajax(setting);\r\n        if (settingResponse.result === 'success') {\r\n            logoutOpts = logoutOpts || {};\r\n\r\n            if(logoutOpts.isLogoutProc === undefined || logoutOpts.isLogoutProc === true) {\r\n                if (!logoutOpts.logoutProcUrl) {\r\n                    await $.get(FN_LOGOUT_PROC_URL(`//${window.location.host}`));\r\n                } else {\r\n                    await $.get(FN_LOGOUT_PROC_URL(`${logoutOpts.logoutProcUrl}`));\r\n                }\r\n            }\r\n            this.storageHelper.setCookie('accessToken', '', -1 as any);\r\n            this.storageHelper.setCookie('client_id', '', -1 as any);\r\n            if(logoutOpts.isRestoreLocation === undefined || logoutOpts.isRestoreLocation === true) { // 로그아웃 후 있던 페이지에 머무를 것이냐 말것이냐\r\n                location.href = `//${window.location.host}${window.location.pathname}`;\r\n            }\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","export class FileHelper {\r\n\r\n    getExtension(fileName: string) {\r\n        return fileName.split('.').pop();\r\n    }\r\n\r\n}","import {DateHelper} from './date-helper'\r\nimport {FileHelper} from \"./file-helper\";\r\nimport {Login} from './login'\r\nimport {UrlHelper} from './url-helper'\r\n\r\nexport class Factory {\r\n    static newInstanceLogin() {\r\n        return new Login();\r\n    }\r\n\r\n    static newInstanceUrlHelper() {\r\n        return new UrlHelper();\r\n    }\r\n\r\n    static newInstanceDateHelper() {\r\n        return new DateHelper();\r\n    }\r\n\r\n    static newInstanceFileHelper() {\r\n        return new FileHelper();\r\n    }\r\n}\r\n","import {DEV_SEARCH_URL, LOCAL_SEARCH_URL, SEARCH_URL} from './constants';\r\n\r\nexport class SearchHelper {\r\n\r\n    /**\r\n     * 페이지 조회 정보를 저장하는 함수\r\n     * @param serviceType\r\n     * @param streamId\r\n     * @param coolIdx\r\n     * @param env\r\n     */\r\n    coolPageViewForStream(serviceType: any, subServiceType: string, streamId: number, coolIdx: number, env: 'prod' | 'dev' | 'local' = 'prod') {\r\n        if (serviceType || streamId) {\r\n            let coolPageViewForStreamUrl = '/api/coolPageView/indexing';\r\n            switch (env) {\r\n                case 'local':\r\n                    coolPageViewForStreamUrl = LOCAL_SEARCH_URL + coolPageViewForStreamUrl;\r\n                    break;\r\n                case 'dev':\r\n                    coolPageViewForStreamUrl = DEV_SEARCH_URL + coolPageViewForStreamUrl;\r\n                    break;\r\n                case 'prod':\r\n                default:\r\n                    coolPageViewForStreamUrl = SEARCH_URL + coolPageViewForStreamUrl;\r\n                    break;\r\n            }\r\n\r\n            const settingsData = {\r\n                \"serviceType\": serviceType,\r\n                \"subServiceType\": subServiceType,\r\n                \"serviceSeq\": streamId,\r\n                \"url\": window.location.href\r\n            } as any;\r\n\r\n            if (coolIdx) {\r\n                settingsData.coolIdx = coolIdx;\r\n            }\r\n\r\n            const settings = {\r\n                url: coolPageViewForStreamUrl,\r\n                type: 'POST',\r\n                contentType: \"application/json\",\r\n                dataType: 'json',\r\n                data: JSON.stringify(settingsData)\r\n            };\r\n            $.ajax(settings)\r\n        }\r\n    }\r\n\r\n}\r\n","import {CoolVueCommonParams} from \"./model/cool-vue-common-params\";\r\n\r\ndeclare const document: any;\r\n\r\nexport class VueHelper {\r\n\r\n    async settingUserParams(userInfoUrl: string, params: CoolVueCommonParams, callback?: (p: CoolVueCommonParams) => void) {\r\n        // ajax cache 설정\r\n        const isIe = /*@cc_on!@*/false || !!document.documentMode;\r\n        if (isIe) {\r\n            $.ajaxSetup({cache: false});\r\n        }\r\n\r\n        const settings: any = {\r\n            url: userInfoUrl\r\n        };\r\n\r\n        let userInfoResp = {} as any;\r\n        if (!params.user) {\r\n            if (params.authorization) {\r\n                settings.headers = {\r\n                    Authorization: params.authorization,\r\n                    ClientId: params.clientId\r\n                };\r\n                userInfoResp = await $.ajax(settings);\r\n                params.isAuth = userInfoResp.result;\r\n                params.user = userInfoResp.result ? userInfoResp.data : {};\r\n            } else {\r\n                params.isAuth = false;\r\n                params.user = {};\r\n            }\r\n        }\r\n        if (callback) {\r\n            callback(params);\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n}\r\n"],"names":["DateHelper","dateStr","date","moment","hour","minute","second","toISOString","FN_LOGOUT_URL","url","FN_LOGOUT_PROC_URL","MEMBER_URL","DEV_MEMBER_URL","LOCAL_MEMBER_URL","COOL_LOGIN_URL","DEV_COOL_LOGIN_URL","LOCAL_COOL_LOGIN_URL","COOL_LOGIN_CALLBACK_URL","window","location","protocol","host","COOL_LOGIN_CALLBACK_FOR_SAMSTORY_URL","COOL_LOGIN_CALLBACK_FOR_EMOTICON_URL","COOL_LOGIN_CHECK_URL","DEV_COOL_LOGIN_CHECK_URL","COOLSCHOOL_CALLBACK_URL","DEV_COOLSCHOOL_CALLBACK_URL","SEARCH_URL","DEV_SEARCH_URL","LOCAL_SEARCH_URL","EnvHelper","env","serverName","fnUrl","StorageHelper","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","sname","svalue","sessionStorage","setItem","getItem","UrlHelper","key","this","getQueryParams","queryString","qs","href","search","join","tokens","params","re","exec","hash","Login","clientId","action","isDev","param","client_id","redirect_uri","redirect_uri_next","do_action","loginURL","paramStr","$.param","replace","nextUrl","callbackURL","redirectNext","urlHelper","getQueryParam","redirect","doAction","loginCheckURL","$.ajax","method","dataType","coolLoginCheck","logoutOpts","logoutUrl","envHelper","getUrl","setting","type","contentType","_a","result","undefined","isLogoutProc","logoutProcUrl","$.get","storageHelper","setCookie","isRestoreLocation","pathname","FileHelper","fileName","pop","Factory","SearchHelper","serviceType","subServiceType","streamId","coolIdx","coolPageViewForStreamUrl","settingsData","serviceSeq","settings","data","JSON","stringify","$","ajax","VueHelper","userInfoUrl","callback","documentMode","ajaxSetup","cache","userInfoResp","user","authorization","headers","Authorization","ClientId","isAuth"],"mappings":"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"}